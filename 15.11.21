#include <iostream>
#include <cmath>
using namespace std;

void rand_array(int* array, int n)
{
    srand(time(0));
    for (int i = 0; i < n; i++)
    {
        array[i] = rand() % 1000 + 1;
    }
}

void print_array(int* array, int n)
{
    for (int i = 0; i < n; i++)
    {
        cout << array[i] << " ";
    }
    cout << endl;
}

void move_left(int* array, int begin, int end)
{
    int tmp = array[begin];
    for (int i = begin; i < end; i++)
    {
        array[i] = array[i + 1];
    }
    array[end] = tmp;
}

void move_right(int* array, int begin, int end)
{
    int tmp = array[end];
    for (int i = end; i > begin; i--)
    {
        array[i] = array[i - 1];
    }
    array[begin] = tmp;
}

void qsort(int* array, int begin, int end)
{
    int mid = begin + (end - begin) / 2;
    for (int i = 0; i <= end; i++)
    {
        if (array[i] > array[mid] && i < mid)
        {
            move_left(array, i, mid);
            mid--;
            i--;
            cout << "move_left: ";
            print_array(array, end + 1);
        }

        if (array[i] < array[mid] && i > mid)
        {
            move_right(array, mid, i);
            mid++;
            cout << "move_right: ";
            print_array(array, end + 1);
        }
    }
    if (begin < mid - 1)
    {
        qsort(array, begin, mid - 1);
    }
    if (mid + 1 < end)
    {
        qsort(array, mid + 1, end);
    }
    return;
}

template <typename T>
int num_dig(T a)
{
    int n = 0;
    while (a)
    {
        a /= 10;
        n += 1;
    }
    return n;
}

template <typename T>
int dig_sort(T a, T b)
{
    int flag = 0;

    if (a / pow(10, num_dig(a)) > b / pow(10, num_dig(b)))
    {
        flag = 1;
        return flag;
    }

    if (num_dig(a) == 1 || num_dig(b) == 1)
    {
        if (num_dig(a) == num_dig(b))
        {
            return 0;
        } 
        
        if (num_dig(a) > num_dig(b))
        {
            return 1;
        }
        
        if (num_dig(a) < num_dig(b))
        {
            return 0;
        }
    }

    if (a / pow(10, num_dig(a)) == b / pow(10, num_dig(b)))
    {
        dig_sort(a % int(pow(10, num_dig(a))), b % int(pow(10, num_dig(b))));
    }
}

template <typename T>
void bubble_sort(T* a, T n)
{
    bool flag = 1;
    int tmp;
    while (flag)
    {
        flag = 0;
        for (int j = 0; j < n - 1; j++)
        {
            if (dig_sort(a[j], a[j+1]))
            {
                tmp = a[j];
                a[j] = a[j + 1];
                a[j + 1] = tmp;
                flag = 1;
                cout << "bubble\n";
                print_array(a, n);
            }
        }
    }
}


int main()
{
    int n = 10;
    //cout << "input n\n";
    //cin >> n;
    int* array = new int[n];

    rand_array(array, n);

    print_array(array, n);

    bubble_sort(array, n);

    print_array(array, n);

    /*qsort(array, 0, n - 1);

    print_array(array, n);*/

    delete[] array;
}
